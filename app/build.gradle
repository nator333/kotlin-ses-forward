/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.4/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */
plugins {
	// Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
	id 'org.jetbrains.kotlin.jvm' version '1.9.10'
	id "com.diffplug.spotless" version "7.0.2"
}

version = "2.0.0"

spotless {
	// optional: limit format enforcement to just the files changed by this feature branch
	ratchetFrom 'origin/master'

	format 'misc', {
		// define the files to apply `misc` to
		target '*.gradle', '.gitattributes', '.gitignore'

		// define the steps to apply to those files
		trimTrailingWhitespace()
		leadingSpacesToTabs() // or leadingTabsToSpaces. Takes an integer argument if you don't like 4
		endWithNewline()
	}
	java {
		// don't need to set target, it is inferred from java

		// apply a specific flavor of google-java-format
		googleJavaFormat('1.25.2').aosp().reflowLongStrings().skipJavadocFormatting()
		// fix formatting of type annotations
		formatAnnotations()
		// make sure every file has the following copyright header.
		// optionally, Spotless can set copyright years by digging
		// through git history (see "license" section below)
		licenseHeader '/* (C)$YEAR */'
	}
}

repositories {
	// Use Maven Central for resolving dependencies.
	mavenCentral()
}

dependencies {
	// This dependency is used by the application.
	implementation 'com.google.guava:guava:32.1.1-jre'
	// AWS V2
	implementation(platform("software.amazon.awssdk:bom:2.27.21"))
	implementation("software.amazon.awssdk:s3")
	implementation("software.amazon.awssdk:s3-transfer-manager")
	implementation("software.amazon.awssdk:sesv2")
	// AWS V1
	implementation('com.amazonaws:aws-lambda-java-core:1.2.3')
	implementation('com.amazonaws:aws-lambda-java-events:3.14.0')

	// Jackson
	implementation(platform("com.fasterxml.jackson:jackson-bom:2.18.2"))
	implementation('com.fasterxml.jackson.core:jackson-core')
	implementation('com.fasterxml.jackson.core:jackson-databind')
	implementation('com.fasterxml.jackson.core:jackson-annotations')
	implementation('com.fasterxml.jackson.module:jackson-module-kotlin')

	implementation("org.apache.logging.log4j:log4j-slf4j2-impl:2.24.3")
	implementation('org.jsoup:jsoup:1.18.3')
	implementation('org.apache.commons:commons-email2-javax:2.0.0-M1')
}

testing {
	suites {
		// Configure the built-in test suite
		test {
			// Use Kotlin Test test framework
			useKotlinTest('1.9.10')
		}
	}
}

// Apply a specific Java toolchain to ease working on different environments.
java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

task buildZip(type: Zip) {
	from compileKotlin
	from processResources
	into('lib') {
		from configurations.runtimeClasspath
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

build.dependsOn clean
build.dependsOn buildZip
