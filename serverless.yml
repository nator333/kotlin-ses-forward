# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: nator333
# lambda function: kotlin-ses-forward
# Receive S3 create event and get the mail object,
#  then forward to another email address.
service: kotlin-ses-forward

custom:
  serviceName: kotlin-ses-forward
  eventBucket: ${env:EVENT_BUCKET}
  subjectPrefix: "SES FW: "
  handlerPath: tech.nakamata.Main
  # Ugly but fine
  mailFrom1: ${file(./config.js):mailFrom1}
  mailFrom2: ${file(./config.js):mailFrom2}
  version: 2.0.0

provider:
  name: aws
  runtime: java21
  timeout: 30
  # This will generate a bucket if needed
  deploymentBucket:
    name: ${env:DEPLOYMENT_BUCKET}
  region: ${env:REGION_ID}
  logRetentionInDays: 30
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - s3:GetObject
      Resource: arn:aws:s3:::${self:custom.eventBucket}/*
    - Effect: "Allow"
      Action:
        - ses:SendEmail
        - ses:SendRawEmail
      Resource: "*"

package:
  artifact: app/build/distributions/app-${self:custom.version}.zip

functions:
  Handler:
    name: ${self:custom.serviceName}-handler-${sls:stage}
    handler: ${self:custom.handlerPath}
    environment:
      MAIL_TO: ${env:MAIL_TO}
      MAIL_FROM: ${env:MAIL_FROM}
      EVENT_BUCKET: ${self:custom.eventBucket}
      REGION_ID: ${env:REGION_ID}
      SUBJECT_PREFIX: ${self:custom.subjectPrefix}
    events:
      # This will generate a bucket if needed
      - s3:
          bucket: ${self:custom.eventBucket}
          event: s3:ObjectCreated:Put

resources:
  Resources:
    EventBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${self:custom.eventBucket}
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            Effect: Allow
            Principal:
              Service: ses.amazonaws.com
            Action:
              - s3:PutObject
            Resource: arn:aws:s3:::${self:custom.eventBucket}/*
            Condition:
              StringEquals:
                "aws:Referer": { Ref: AWS::AccountId }

    # This resource requires manual activation
    ReceiptRuleSet:
      Type: AWS::SES::ReceiptRuleSet
      Properties:
        RuleSetName: ${self:custom.serviceName}-rule-set-${sls:stage}

    ReceiptRule:
      Type: AWS::SES::ReceiptRule
      DependsOn: EventBucketPolicy
      Properties:
        Rule:
          Actions:
            - S3Action:
                BucketName: ${env:EVENT_BUCKET}
          Enabled: true
          Name: ${self:custom.serviceName}-rule-${sls:stage}
          Recipients:
            - ${self:custom.mailFrom1}
            - ${self:custom.mailFrom2}
          ScanEnabled: true
          TlsPolicy: Optional
        RuleSetName: !Ref ReceiptRuleSet